require_relative '../challenge'

source = [
  "#.#####################",
  "#.......#########...###",
  "#######.#########.#.###",
  "###.....#.>.>.###.#.###",
  "###v#####.#v#.###.#.###",
  "###.>...#.#.#.....#...#",
  "###v###.#.#.#########.#",
  "###...#.#.#.......#...#",
  "#####.#.#.#######.#.###",
  "#.....#.#.#.......#...#",
  "#.#####.#.#.#########v#",
  "#.#...#...#...###...>.#",
  "#.#.#v#######v###.###v#",
  "#...#.>.#...>.>.#.###.#",
  "#####v#.#.###v#.#.###.#",
  "#.....#...#...#.#.#...#",
  "#.#########.###.#.#.###",
  "#...###...#...#...#.###",
  "###.###.#.###v#####v###",
  "#...#...#.#.>.>.#.>.###",
  "#.###.###.#.###.#.#v###",
  "#.....###...###...#...#",
  "#####################.#"
]

RSpec.describe 'challenge#find_longest_path' do
  it 'should return an integer' do
    expect(find_longest_path(source).class).to eq(Integer)
  end

  it 'should return the correct total' do
    expect(find_longest_path(source)).to eq(94)
  end
end
